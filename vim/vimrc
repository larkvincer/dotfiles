" True color
" set termguicolors

" Specify a directory for plugins (for Neovim: ~/.local/share/nvim/plugged)
call plug#begin('~/.vim/plugged')
" One dark colorscheme
Plug 'joshdick/onedark.vim'

" Make sure you use single quotes
Plug 'scrooloose/nerdtree'

" Fuzzy finder -- absolutely must have.
Plug 'kien/ctrlp.vim'

" Support for easily toggling comments.
Plug 'tpope/vim-commentary'

" Autocomplete engine
Plug 'valloric/youcompleteme'

" Light status line
Plug 'itchyny/lightline.vim'
" git intigration for lightline
Plug 'tpope/vim-fugitive'

" Proper JSON filetype detection, and support.
Plug 'leshill/vim-json'

" vim already has syntax support for javascript, but the indent support is
" horrid. This fixes that.
Plug 'pangloss/vim-javascript'
" jsx syntax highliting
Plug 'mxw/vim-jsx'

" Zen coding
Plug 'mattn/emmet-vim'

" vim indents HTML very poorly on it's own. This fixes a lot of that.
Plug 'indenthtml.vim'

" I write markdown a lot. This is a good syntax.
Plug 'tpope/vim-markdown'

" Initialize plugin system
call plug#end()


set nocompatible " Fuck VI... That's for grandpas.
filetype off

" We have to turn this stuff back on if we want all of our features.
filetype plugin indent on " Filetype auto-detection

set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab " use spaces instead of tabs.
set smarttab " let's tab key insert 'tab stops', and bksp deletes tabs.
set shiftround " tab / shifting moves to closest tabstop.
set autoindent " Match indents on new lines.
set smartindent " Intellegently dedent / indent new lines based on rules.

" We have VCS -- we don't need this stuff.
set nobackup " We have vcs, we don't need backups.
set nowritebackup " We have vcs, we don't need backups.
set noswapfile " They're just annoying. Who likes them?

" don't nag me when hiding buffers
set hidden " allow me to have buffers with unsaved changes.
set autoread " when a file has changed on disk, just load it. Don't ask.

" Make search more sane
set ignorecase " case insensitive search
set smartcase " If there are uppercase letters, become case-sensitive.
set incsearch " live incremental searching
set showmatch " live match highlighting
set hlsearch " highlight matches
set gdefault " use the `g` flag by default.

" allow the cursor to go anywhere in visual block mode.
set virtualedit+=block


" leader is a key that allows you to have your own "namespace" of keybindings.
" You'll see it a lot below as <leader>
let mapleader = ","

" So we don't have to press shift when we want to get into command mode.
nnoremap ; :
vnoremap ; :

" So we don't have to reach for escape to leave insert mode.
inoremap jf <esc>

" create new vsplit, and switch to it.
" noremap <leader>v <C-w>v

" bindings for easy split nav
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Use sane regex's when searching
" nnoremap / /\v
" vnoremap / /\v

" Clear match highlighting
noremap <leader><space> :noh<cr>:call clearmatches()<cr>

" Quick buffer switching - like cmd-tab'ing
" nnoremap <leader><leader> <c-^>


" Visual line nav, not real line nav
" If you wrap lines, vim by default won't let you move down one line to the
" wrapped portion. This fixes that.
" noremap j gj
" noremap k gk

" Plugin settings:
" Below are some 'sane' (IMHO) defaults for a couple of the above plugins I
" referenced.

" Lightline configuration
set laststatus=2
let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'fugitive#head'
      \ },
      \ }
set noshowmode

" CtrlP configuration
" Let ctrlp have up to 30 results.
let g:ctrlp_max_height = 30
let g:ctrlp_working_path_mode = 'ra'

" NERDTreeToggle configuration
map <C-\> :NERDTreeToggle<CR>

" Colorscheme configuration
syntax on " Syntax highlighting
colorscheme onedark
set listchars=tab:▸\ ,eol:¬
set listchars+=space:·
set list
set number

